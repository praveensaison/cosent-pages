AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  static-site

  Sample SAM Template for static-site

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30

Parameters:
  EnvironmentType:
    Description: Environment Type
    Type: String

Conditions:
  EnvironmentNotProd: !Not [ !Equals [ !Ref EnvironmentType, "production" ] ]
  EnvironmentProd: !Equals [ !Ref EnvironmentType, "production" ]
  EnvironmentInt: !Equals [ !Ref EnvironmentType, "int" ]

Resources:

  customerconsentbucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'customerconsent-${EnvironmentType}-${AWS::AccountId}-${AWS::Region}'
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      WebsiteConfiguration:
        IndexDocument: customerconsent/static/communicationBorrower.html
        ErrorDocument: customerconsent/static/Error404.html
      Tags:
        - Key: Service
          Value: hawkgirl
        - Key: Owner
          Value: neutrons
        - Key: Department
          Value: Product
        - Key: Stage
          Value: None

  cloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for customerconsentbucket'

  customerconsentbucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'customerconsentbucket'
      PolicyDocument:
        Id: PolicyForCloudFrontPrivateContent
        Statement:
          Effect: Allow
          Principal:
            AWS: !Join [ '', [ 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ', !Ref cloudFrontOriginAccessIdentity ] ]
          Action: s3:GetObject
          Resource: !Join [ '', [ 'arn:aws:s3:::', !Ref 'customerconsentbucket', /* ] ]

  
  myDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      Fn::Transform:
        Name: "GetSSMParameter"
        Parameters:
          parameterName: KSF-Wildcard-SSL-Certificate
      DistributionConfig:
        Enabled: 'true'
        DefaultRootObject: customerconsent/static/communicationBorrower.html
        Aliases:
          - !If
            - EnvironmentProd
            - !Sub "customerconsent.creditsaison.in"
            - !If
              - EnvironmentInt
              - !Join [ "", [ "customerconsent", ".", !Ref EnvironmentType, ".creditsaison.in" ] ]
              - !Join [
                "",
                [ "customerconsent", ".", !Ref EnvironmentType, ".creditsaison.xyz" ],
              ]
        ViewerCertificate:
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: 'sni-only'
          AcmCertificateArn: "$$KSF-Wildcard-SSL-Certificate$$"
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: False
          TargetOriginId: !Sub 'customerconsentbucket origin'
          ViewerProtocolPolicy: https-only
        Origins:
          - DomainName: !Join [ '', [ !Ref 'customerconsentbucket', '.s3.amazonaws.com' ] ]
            Id: !Sub 'customerconsentbucket origin'
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${cloudFrontOriginAccessIdentity}'
        CustomErrorResponses:
          - ErrorCode: '403'
            ResponsePagePath: "/customerconsent/static/communicationBorrower.html"
            ResponseCode: '200'
            ErrorCachingMinTTL: '300'
          - ErrorCode: '404'
            ResponsePagePath: "/customerconsent/static/communicationBorrower.html"
            ResponseCode: '200'
            ErrorCachingMinTTL: '300'
          - ErrorCode: '500'
            ResponsePagePath: "/customerconsent/static/communicationBorrower.html"
            ResponseCode: '200'
            ErrorCachingMinTTL: '300'
      Tags:
        - Key: Service
          Value: hawkgirl
        - Key: Owner
          Value: neutrons
        - Key: Department
          Value: Product
        - Key: Stage
          Value: None




  R53DnsRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt [ myDistribution, DomainName ]
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2
      Comment: !Sub "DNS Record for customer consent"
      HostedZoneName: !If
        - EnvironmentProd
        - "creditsaison.in."
        - !If
          - EnvironmentInt
          - !Join [ "", [ !Ref EnvironmentType, ".creditsaison.in." ] ]
          - !Join [ "", [ !Ref EnvironmentType, ".creditsaison.xyz." ] ]
      Name: !If
        - EnvironmentProd
        - !Sub "customerconsent.creditsaison.in"
        - !If
          - EnvironmentInt
          - !Join [ "", [ "customerconsent", ".", !Ref EnvironmentType, ".creditsaison.in" ] ]
          - !Join [
            "",
            [ "customerconsent", ".", !Ref EnvironmentType, ".creditsaison.xyz" ],
          ]
      Type: A



Outputs:
  BucketName:
    Value: !Ref 'customerconsentbucket'
    Description: Name of S3 bucket to hold website content
  CloudfrontEndpoint:
    Value: !Ref myDistribution
    Description: Endpoint for Cloudfront distribution
